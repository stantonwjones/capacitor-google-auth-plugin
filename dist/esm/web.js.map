{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { CapacitorGoogleAuthPlugin, User } from './definitions';\n\nexport class CapacitorGoogleAuthWeb extends WebPlugin implements CapacitorGoogleAuthPlugin {\n\n  googleApiLoadedSuccessfully = (): void => {};\n  googleApiFailedToLoad = (): void => {};\n  googleApiLoaded = new Promise<void>((resolve, reject) => {\n    this.googleApiLoadedSuccessfully = () => {\n      resolve();\n    };\n    this.googleApiFailedToLoad = () => reject();\n  });\n\n  constructor() {\n    super();\n    console.log(\"constructor called\");\n    this.loadScript();\n  }\n\n  async authorize(options: { scopes: [string], clientId: string }): Promise<{ accessToken: string }> {\n    await this.googleApiLoaded;\n\n    return new Promise<{accessToken: string}>(async (resolve, reject) => {\n      try {\n\n        google.accounts.id.initialize({\n           client_id: options.clientId, // Replace with your actual client ID\n           callback: (googleUser) => {\n            console.log(googleUser);\n            resolve({accessToken: googleUser.credential});\n           }, // Function to handle the sign-in response\n        });\n        google.accounts.id.prompt();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  // async refresh() {\n  //   const authResponse = await gapi.auth2.getAuthInstance().currentUser.get().reloadAuthResponse();\n  //   return {\n  //     accessToken: authResponse.access_token,\n  //     idToken: authResponse.id_token,\n  //     refreshToken: '',\n  //   };\n  // }\n\n  // async signOut() {\n  //   return gapi.auth2.getAuthInstance().signOut();\n  // }\n\n  // async addUserChangeListener() {\n  //   await this.gapiLoaded;\n  //   gapi.auth2.getAuthInstance().currentUser.listen((googleUser) => {\n  //     this.notifyListeners('userChange', googleUser.isSignedIn() ? this.getUserFrom(googleUser) : null);\n  //   });\n  // }\n\n  private getUserFrom(googleUser: gapi.auth2.GoogleUser) {\n    const user = {} as User;\n    const profile = googleUser.getBasicProfile();\n\n    user.email = profile.getEmail();\n    user.familyName = profile.getFamilyName();\n    user.givenName = profile.getGivenName();\n    user.id = profile.getId();\n    user.imageUrl = profile.getImageUrl();\n    user.name = profile.getName();\n\n    const authResponse = googleUser.getAuthResponse(true);\n    user.accessToken = authResponse.access_token;\n    user.idToken = authResponse.id_token;\n    user.refreshToken = '';\n\n    return user;\n  }\n\n  // Dynamically loads google api scripts\n  private loadScript() {\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const scriptId = 'gapi';\n    const scriptEl = document?.getElementById(scriptId);\n\n    if (scriptEl) {\n      return;\n    }\n\n    const head = document.getElementsByTagName('head')[0];\n    const script = document.createElement('script');\n\n    script.type = 'text/javascript';\n    script.defer = true;\n    script.async = true;\n    script.id = scriptId;\n    script.onload = () => this.googleApiLoadedSuccessfully();\n    script.src = 'https://accounts.google.com/gsi/client';\n    head.appendChild(script);\n  }\n}\n"]}